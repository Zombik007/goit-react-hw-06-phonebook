{"version":3,"sources":["Phonebook/Phonebook.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","Phonebook/ContactForm.js","Phonebook/FilterContact.js","Phonebook/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","ADD","DELETE","FILTER","data","type","types","payload","id","uuidv4","name","number","contactId","value","ContactForm","state","inputChange","e","currentTarget","setState","formSubmit","preventDefault","props","onSubmit","resetForm","className","styles","phonebook__form","this","phonebook__label","phonebook__input","pattern","title","required","onChange","phonebook__button_form","Component","connect","dispatch","contactsActions","contacts","filter","target","getFilteredContacts","allContacts","normalizeFilter","toLowerCase","contact","includes","items","onDeleteContact","phonebook__list","map","phonebook__item","phonebook__button","onClick","App","combineReducers","CHANGE_FILTER","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.141a054d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook__form\":\"Phonebook_phonebook__form__3MLKj\",\"phonebook__label\":\"Phonebook_phonebook__label__1IKyg\",\"phonebook__input\":\"Phonebook_phonebook__input__9AOTi\",\"phonebook__button_form\":\"Phonebook_phonebook__button_form__2wG8w\",\"phonebook__list\":\"Phonebook_phonebook__list__1jSN1\",\"phonebook__item\":\"Phonebook_phonebook__item__3BSW3\",\"phonebook__button\":\"Phonebook_phonebook__button__g0Km7\"};","const ADD = 'contacts/Add';\r\nconst DELETE = 'contacts/Delete';\r\nconst FILTER = 'contacts/Filter';\r\n\r\nexport default { ADD, DELETE, FILTER };\r\n","import types from './contacts-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = data => ({\r\n  type: types.ADD,\r\n  payload: { id: uuidv4(), name: data.name, number: data.number },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst filterContact = value => ({\r\n  type: types.FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, filterContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts/contacts-actions';\r\n\r\nimport styles from './Phonebook.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  formSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.phonebook__form} onSubmit={this.formSubmit}>\r\n          <label className={styles.phonebook__label}>\r\n            Name\r\n            <input\r\n              className={styles.phonebook__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.inputChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.phonebook__label}>\r\n            Number\r\n            <input\r\n              className={styles.phonebook__input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.inputChange}\r\n            />\r\n          </label>\r\n          <button className={styles.phonebook__button_form} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactsActions.addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts/contacts-actions';\r\n\r\nconst FilterContact = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        title=\"Search contacts\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.filterContact(e.target.value)),\r\n});\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContact);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../redux/contacts/contacts-actions';\r\n\r\nimport styles from './Phonebook.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.phonebook__list}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={styles.phonebook__item} key={id}>\r\n            {name}: {number}\r\n            <button\r\n              className={styles.phonebook__button}\r\n              onClick={() => {\r\n                onDeleteContact(id);\r\n              }}\r\n            >\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport ContactForm from './Phonebook/ContactForm';\r\nimport FilterContact from './Phonebook/FilterContact';\r\nimport ContactList from './Phonebook/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <FilterContact />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\n// componentDidMount() {\r\n//   const contacts = localStorage.getItem('contacts');\r\n//   const parsedContacts = JSON.parse(contacts);\r\n//   if (parsedContacts) {\r\n//     this.setState({ contacts: parsedContacts });\r\n//   }\r\n// }\r\n\r\n// componentDidUpdate(prevProps, prevState) {\r\n//   if (store.getState().contacts !== prevState) {\r\n//     localStorage.setItem(\r\n//       'contacts',\r\n//       JSON.stringify(store.getState().contacts.items),\r\n//     );\r\n//   }\r\n// }\r\n\r\n//     return (\r\n//       <div>\r\n//         <h1>Phonebook</h1>\r\n//         <ContactForm />\r\n\r\n//         <h2>Contacts</h2>\r\n//         <FilterContact />\r\n//         <ContactList />\r\n//       </div>\r\n//     );\r\n\r\n// export default App;\r\n","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [payload, ...state];\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n    case types.CHANGE_FILTER:\r\n      return;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}